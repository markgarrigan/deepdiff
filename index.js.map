{"mappings":"AAAA,0BAA0B;AAC1B,IAAI;AAEJ,SAAS,8BAAQ,KAAK,EAAE,KAAK,EAAE,UAAU,2BAAK,EAAE,GAAG,EAAE;IAEnD,0BAA0B;IAC1B,IAAI,CAAC,OAAO,QAAQ,GAClB;IAGF,0CAA0C;IAC1C,MAAM,QAAQ,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC;IAC7C,MAAM,QAAQ,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC;IAC7C,MAAM,WAAW,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC;IAEhD,+CAA+C;IAC/C,0BAA0B;IAC1B,8BAA8B;IAC9B,IAAI,UAAU,sBAAsB;QAClC,IAAI,aAAa,kBACf;QAEF,OAAO,CAAC,IAAI,GAAG,IAAI;QACnB;IACF,CAAC;IAED,sDAAsD;IACtD,IAAI,UAAU,OAAO;QACnB,OAAO,CAAC,IAAI,GAAG;QACf;IACF,CAAC;IAED,4EAA4E;IAC5E,IAAI,UAAU,qBACZ;QAAA,IAAI,MAAM,QAAQ,OAAO,MAAM,QAAQ,IAAI;YACzC,OAAO,CAAC,IAAI,GAAG;YACf;QACF,CAAC;IAAD,CACD;IAED,+BAA+B;IAC/B,MAAM,UAAU,KAAK,SAAS,CAAC;IAC/B,MAAM,UAAU,KAAK,SAAS,CAAC;IAE/B,2BAA2B;IAC3B,0DAA0D;IAC1D,6BAA6B;IAC7B,IAAI,YAAY,SAAS;QACvB,IAAI,aAAa,kBACf,OAAO,CAAC,IAAI,GAAG;QAEjB;IACF,CAAC;IAED,wBAAwB;IACxB,wBAAwB;IACxB,IAAI,UAAU,mBAAmB;QAC/B,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,CAAC;QAChC,+BAAS,OAAO,OAAO,OAAO,CAAC,IAAI;QACnC;IACF,CAAC;IAED,uBAAuB;IACvB,wBAAwB;IACxB,IAAI,UAAU,kBAAkB;QAC9B,MAAM,OAAO,CAAC,CAAC,WAAW,QAAU;YAClC,MAAM,YAAY,KAAK,CAAC,MAAM;YAC9B,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,EAAE;YACjC,8BAAQ,WAAW,WAAW,OAAO,CAAC,IAAI,EAAE;QAC9C;QACA;IACF,CAAC;IAED,6CAA6C;IAC7C,oBAAoB;IACpB,IAAI,SAAS,OAAO;QAClB,OAAO,CAAC,IAAI,GAAG;QACf;IACF,CAAC;AACH;AAEA,SAAS,+BAAS,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE;IACzC,8BAAQ,CAAC,UAAU,CAAC,IAAI,2BAAK;IAC7B,gCAAgC;IAChC,IAAK,MAAM,OAAO,OAChB,IAAI,MAAM,CAAC,IAAI,EACb,8BAAQ,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,SAAS;IAI/C,wDAAwD;IACxD,IAAK,MAAM,QAAO,OAChB,IAAI,MAAM,CAAC,KAAI,EACb,8BAAQ,MAAM,CAAC,KAAI,EAAE,MAAM,CAAC,KAAI,EAAE,SAAS;IAI/C,OAAO;AACT;IAEA,2CAAe","sources":["src/index.js"],"sourcesContent":["// Set up the diffs object\nlet diffs\n\nfunction compare(item1, item2, diffRef = diffs, key) {\n\n  // Make sure we have a key\n  if (!key && key !== 0) {\n    return\n  }\n\n  // Get the types of things we're comparing\n  const type1 = Object.prototype.toString.call(item1)\n  const type2 = Object.prototype.toString.call(item2)\n  const diffType = Object.prototype.toString.call(diffRef)\n\n  // The item does not exist in the second object\n  // Remove it from an array\n  // Set it to null in an object\n  if (type2 === '[object Undefined]') {\n    if (diffType === '[object Array]') {\n      return\n    }\n    diffRef[key] = null\n    return\n  }\n\n  // The types are different just replace the whole item\n  if (type1 !== type2) {\n    diffRef[key] = item2\n    return\n  }\n\n  // The type is a function and they are different just replace the whole item\n  if (type1 === '[object Function]') {\n    if (item1.toString() !== item2.toString()) {\n      diffRef[key] = item2\n      return\n    }\n  }\n\n  // Convert the items to strings\n  const string1 = JSON.stringify(item1)\n  const string2 = JSON.stringify(item2)\n\n  // The strings are the same\n  // If were working with an array add the item to the array\n  // Everything else do nothing\n  if (string1 === string2) {\n    if (diffType === '[object Array]') {\n      diffRef[key] = item2\n    }\n    return\n  }\n\n  // The item is an object\n  // We need to dig deeper\n  if (type1 === '[object Object]') {\n    diffRef[key] = diffRef[key] || {}\n    deepdiff(item1, item2, diffRef[key])\n    return\n  }\n\n  // The item is an array\n  // We need to dig deeper\n  if (type1 === '[object Array]') {\n    item1.forEach((deepItem1, index) => {\n      const deepItem2 = item2[index]\n      diffRef[key] = diffRef[key] || []\n      compare(deepItem1, deepItem2, diffRef[key], index)\n    })\n    return\n  }\n\n  // The item is a string, number, boolean, etc\n  // Just compare them\n  if (item1 != item2) {\n    diffRef[key] = item2\n    return\n  }\n}\n\nfunction deepdiff(thing1, thing2, diffRef) {\n  diffs = !diffRef ? {} : diffs\n  // Loop through the first object\n  for (const key in thing1) {\n    if (thing1[key]) {\n      compare(thing1[key], thing2[key], diffRef, key);\n    }\n  }\n\n  // Loop through the second object and find missing items\n  for (const key in thing2) {\n    if (thing2[key]) {\n      compare(thing1[key], thing2[key], diffRef, key);\n    }\n  }\n\n  return diffs\n}\n\nexport default deepdiff\n"],"names":[],"version":3,"file":"index.js.map"}